library(jsonlite)
library(jsonlite)
dirPath <- "/Users/albertocottica/Documents/More PhD stuff/MyPhDdata/Thesis Paper 3/Paper 3 Data/raw_json_2016-05-11/json/data/2016-05-11-11-54-09"
dirPath <- "/Users/albertocottica/Documents/More PhD stuff/MyPhDdata/Thesis Paper 3/Paper 3 Data/raw_json_2016-05-11/json/data/2016-05-11-11-54-09"
netFile <- fromJSON(dirPath + "network.min", flatten = TRUE)
paste ('a', 'b')
paste('a', 'b', collapse = "")
?paste
paste('a', 'b', sep = '')
netFileName <- paste(dirPath, "network.min", sep ="")
netFile <- fromJSON(netFileName)
netFile
netFile <- fromJSON(netFileName, flatten = TRUE)
netFile <- fromJSON(netFileName, flatten = TRUE)
netFile <- fromJSON("/Users/albertocottica/Documents/More PhD stuff/MyPhDdata/Thesis Paper 3/Paper 3 Data/raw_json_2016-05-11/json/data/2016-05-11-11-54-09/network.min", flatten = TRUE)
netFile <- fromJSON('/Users/albertocottica/Documents/More PhD stuff/MyPhDdata/Thesis Paper 3/Paper 3 Data/raw_json_2016-05-11/json/data/2016-05-11-11-54-09/network.min', flatten = TRUE)
netFileName <- '/Users/albertocottica/Documents/More PhD stuff/MyPhDdata/Thesis Paper 3/Paper 3 Data/raw_json_2016-05-11/json/data/2016-05-11-11-54-09/network.min'
netFile <- fromJSON(netFile, flatten = TRUE)
netFile <- fromJSON(netFileName, flatten = TRUE)
netFileName
netFileName <- '/Users/albertocottica/Documents/More PhD stuff/MyPhDdata/Thesis Paper 3/Paper 3 Data/raw_json_2016-05-11/json/data/2016-05-11-11-54-09/network.min.json'
netFile <- fromJSON(netFileName, flatten = TRUE)
edges <- netFile ['edges']
edges[1]
edges[1][1]
edges[1]['source']
length (edges)
length (edges) [1]
length (edges)[1,1]
length(edges[1,1])
edges[1,1]
dim(edges)
head(edges, n = 3)
len(edges)
length(edges)
typeof(edges)
typeof(edges[1])
typeof(edges[1][1])
typeof(edges[1][1][1])
edges[[1]]
typeof(edges[[1]])
dim(edges)
dim(edges[1])
dim.data.frame(edges[1])
nrow(edges[1])
ncol(edges[1])
edges['source', 1]
edges['source']
edges[1]
dim(edges['edges'])
edges['edges']
edges[['edges']]
length[edges[['edges']]]
length(edges[['edges']])
realEdges <- edges[['edges']] #damn nested structure of the dataframe
length(realEdges)
dim(realEdges)
realEdges['source',1]
realEdges <- t(edges[['edges']]) #damn nested structure of the dataframe
typeo(realEdges)
typeof(realEdges)
View(realEdges)
realEdges["source",1]
l <- list ('a' = 'foo', 'b' = 'bar')
l
$a
l[$a]
l[a]
l['a']
'foo' in l
'foo' $in$ l
'foo' $in$ names(l)
'a' $in$ names(l)
l
exists('foo' where = l)
exists('foo', where = l)
exists("foo", where = l)
exists('a', where = l)
realEdges['source', 1]
l
l$newthing <- 3
l
l$something <- NULL
l
l$something <- 0
l
l <-NULL
realEdges['ts', 1]
strtoi( realEdges['ts', 1])
newEdges <- t(realEdges)
newEdges <- t(edges)
edges <- t(netFile['edges'])
View(edges)
edges <- netFile ['edges']
realEdges <- t(edges[['edges']])
View(realEdges)
View(realEdges)
newEdges <- t(realEdges)
View(realEdges)
View(newEdges)
realEdges <- NULL
realEdges$interval <- 0
realEdges <- NULL
newEdges$interval <- 0
newEdges <- t(realEdges)
realEdges <- t(edges[['edges']]) # transpose fails here
newEdges <- t(realEdges)
typeof(newEdges)
newEdges[1, 'source']
View(newEdges)
as.data.frame(newEdges)
class(newEdges)
is.data.frame(newEdges)
is.matrix(newEdges)
as.data.frame?
newEdges <- cbind(newEdges, newEdges['interval'], 0 )
View(realEdges)
newEdges <- t(realEdges)
newEdges <-cbind(newEdges, newEdges[,'interval'] 0)
newEdges <-cbind(newEdges, 0)
View(newEdges)
colnames(newEdges)[7] <- c('interval')
l
l['a'] <- 'foo'
l
l['b'] <- 123
l
4 + l['b']
4 + l[['b']
2 + 2
typeof l['b']
typeof(l['b'])
typeof(l[['b'])
typeof(l[['b']])
myvar <- c(l['b'])
myvar <- NULL
2 + strtoi(l['b'])
l['b']<- strtoi(l['b'])
2 + l['b']
myvar <-strtoi(l['b'])
2 + myvar
else
{
latestComments <- list() # structured like a Python dictionary
for (i in length(edges))
{
user <- newEdges[i, 'source']
ts <- strtoi(newEdges[i, 'ts'])
if (exists(user, where = latestComments) == FALSE)
{
latestComments$user <- ts
}
else
{
thisCommentTs <- strtoi(newEdges[i, 'ts'])
latestCommentTS <- strtoi(latestComments[user])
newEdges[i, 'interval'] <- thisCommentTs - latestCommentTS
}
}
user
latestComments$user <- 8
user <- "36"
latestComments$user <- 10
latestComments
latestComments[2] <- 'foo'
typeof(user)
user
user[1]
latestComments[lenght(latestComments) + 1] <- user:'foo'
latestComments[lenght(latestComments) + 1] <- user[1]:'foo'
latestComments[user[1]] <- 'foo'
latestComments <- list() # structured like a Python dictionary
for (i in length(edges))
{
user <- newEdges[i, 'source']
ts <- strtoi(newEdges[i, 'ts'])
if (exists(user, where = latestComments) == FALSE)
{
latestComments$user[1] <- ts
}
else
{
thisCommentTs <- strtoi(newEdges[i, 'ts'])
latestCommentTS <- strtoi(latestComments[user])
newEdges[i, 'interval'] <- thisCommentTs - latestCommentTS
}
}
latestComments[user[1]] <- 'foo'
latestComments <- list() # structured like a Python dictionary
for (i in length(edges))
{
user <- newEdges[i, 'source']
ts <- strtoi(newEdges[i, 'ts'])
if (exists(user, where = latestComments) == FALSE)
{
latestComments[user[1]] <- ts
}
else
{
thisCommentTs <- strtoi(newEdges[i, 'ts'])
latestCommentTS <- strtoi(latestComments[user])
newEdges[i, 'interval'] <- thisCommentTs - latestCommentTS
}
}
latestComments[user[1]] <- 'foo'
latestComments$user[1] <- 'foo'
latestComments$user[1] <- 'bar'
latestComments
as.data.frame(as.table(newEdges))
dfEdges <- as.data.frame(newEdges)
View(dfEdges)
dfEdges[1,'source']
myvar <- dfEdges[1,'source']
myvar
2 + myvar
2 + dfEdges[1, 'source']
library (jsonlite)
netFileName <- '/Users/albertocottica/Documents/More PhD stuff/MyPhDdata/Thesis Paper 3/Paper 3 Data/json/data/2015-11-02-14-08-26/edgesWIntervals.json'
edgesFile <- fromJSON(netFileName)
View(edgesFile)
hist(edgesfile$interval)
hist(edgesFile$interval)
hist(edgesFile$interval, log='y')
hist(edgesFile$interval, log='x')
hist(edgesFile$interval)
max(edgesFile['interval'])
hist(edgesFile$interval, log ='xy')
hist(edgesFile$interval, col='lightblue')
hist(edgesFile$interval, col='lightblue', log = 'y')
h <-hist(edgesFile$interval, col='lightblue')
plot (h, log= 'y', main = "Interval between two consecutive comments")
(h, log = 'xy', main = "Interval between two consecutive comments")
h <-hist(edgesFile$interval, col='lightblue')
plot (h, log = 'xy', main = "Interval between two consecutive comments")
